{{< include _awash-setup.qmd  >}}



# Trees in CODAP {#trees-part-overview}

We're used to looking at data in graphs and tables. 
But they are not the only possibilities. 
Modern infographics often display data in interesting and novel ways.
CODAP is not as flexible as a Real Programming System 
in its ability to make graphics.
In CODAP, mostly, you get graphs with perpendicular axes,  dots for points, and sometimes bars or lines.
Of course, CODAP is always evolving, so we don't know what will be possible in a month or a couple years.

But because CODAP has an open architecture---it uses plugins---it's possible 
to make new visualizations for CODAP that are not really part of "core" CODAP.
That's how we can work with trees. 

A number of us in CODAP-land have come to love trees 
as a way of displaying data. 
We find that:

* For most students, trees are a new kind of data visualization. 
Furthermore, we know that making multiple representations 
is often a great way to help more students understand a topic.
* Trees give students a chance to invent statistical measures, 
that is, to create mathematical formulas that compute something for the students’ purposes.
* Trees act not only as data visualizations 
but also as algorithms: they describe procedures for making decisions. 
    This helps students see that data can be genuinely useful and connected to daily life, 
and supports developing students’ computational acumen.
* Trees open a door to machine learning, a powerful and up-and-coming topic.

But because you will have done it, you'll understand better what's going on. 

## Lessons with trees {-}

The next few chapters will contain lessons about trees. 

### About contexts for trees

All of the lessons we will start with have a vaguely medical context. 
This is because it's really easy to see how trees are useful 
if you're trying to diagnose some ailment.

But medicine is not the only relevant context,
and diagnosis is not the only possible purpose.
You can use these trees in any situation that calls for _classification_:
for separating the cases of a dataset into two (or more) groups.

## Classification and regression trees

We just made a point that the underlying purpose of the trees
we use here is to classify cases, to put them into groups.
Such trees are called _classification trees_.
There are also _regression_ trees.

## How trees are complicated {-}


